name: Packages

on:
  push:
    paths:
      - packages/**
      - config/**
      - .github/workflows/packages.yml
      - scripts/workspace/release.sh
      - package.json
      - commitlint.config.js

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.1

      - name: Install dependencies
        run: pnpm i --frozen-lock --filter {packages/}

      - name: Lint Projects
        run: pnpm run lint --filter {packages/}

      - name: Test Projects
        run: pnpm run test --filter {packages/}

      - name: Build Projects
        run: pnpm run build --filter {packages/}

  # release:
  #   if: github.ref == 'refs/heads/main'
  #   needs: [build]
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: setup node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14

  #     - name: Cache pnpm modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.pnpm-store
  #         key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-

  #     - name: install pnpm
  #       run: npm i pnpm@latest -g

  #     - name: Setup npmrc
  #       run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

  #     - name: setup pnpm config
  #       run: pnpm config set store-dir $PNPM_CACHE_FOLDER

  #     - name: install dependencies
  #       run: pnpm install --frozen-lock --filter mdx-prism-2

  #     - name: create and publish versions
  #       uses: changesets/action@master
  #       with:
  #         version: pnpm ci:version
  #         commit: 'chore: update versions'
  #         title: 'chore: update versions'
  #         publish: pnpm ci:publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
