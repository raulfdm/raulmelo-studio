---
export type Props = {
  siteData: QuerySiteDataReturnType;
  lang: SupportedLanguages;
};

import type { SupportedLanguages } from '@raulmelo/core';
import type { QuerySiteDataReturnType } from '@raulmelo/core/dist/types/domains/siteData';
import { Image } from '@astrojs/image/components';

import { getIntl } from '@/infrastructure/i18n/getServerSideLocales.server';
import { getSocial } from '@/infrastructure/utils/seo';

import IconWrapper from './IconWrapper.astro';
import DevToIcon from '../../Icons/DevTo.astro';
import MediumIcon from '../../Icons/Medium.astro';
import GithubIcon from '../../Icons/Github.astro';
import LinkedInIcon from '../../Icons/LinkedIn.astro';
import TwitterIcon from '../../Icons/Twitter.astro';

const { siteData, lang } = Astro.props;

const defaultSeo = siteData.defaultSeo[lang];

const intl = getIntl(lang);

const github = getSocial(`github`, siteData);
const twitter = getSocial(`twitter`, siteData);
const linkedIn = getSocial(`linkedin`, siteData);
const devTo = getSocial(`dev.to`, siteData);
const medium = getSocial(`medium`, siteData);
---

<header
  class="flex flex-col-reverse justify-between md:flex-row mb-7 col-span-full"
>
  <aside class="flex flex-col w-full md:max-w-[75%] mt-4 md:mt-0">
    <h1
      class="font-sans text-2xl font-black md:text-3xl xl:text-4xl"
      data-testid="author__name"
    >
      {siteData.personalInformation.fullName}
    </h1>
    <p
      class="text-md md:text-md xl:text-lg mt-2.5"
      data-testid="author__description"
    >
      {defaultSeo?.description}
    </p>
    <section
      class="flex items-center flex-1 pt-5 space-x-4 dark:opacity-90 text-secondary"
    >
      <IconWrapper
        href={devTo.url}
        data-testid="author__linkedInUrl"
        title={intl.formatMessage({
          id: `authorPresentation.devToLinkTitle`,
        })}
      >
        <DevToIcon />
      </IconWrapper>
      <IconWrapper
        href={medium.url}
        data-testid="author__linkedInUrl"
        title={intl.formatMessage({
          id: `authorPresentation.mediumLinkTitle`,
        })}
      >
        <MediumIcon />
      </IconWrapper>
      <IconWrapper
        href={github.url}
        data-testid="author__githubUrl"
        title={intl.formatMessage({
          id: `authorPresentation.githubLinkTitle`,
        })}
      >
        <GithubIcon />
      </IconWrapper>
      <IconWrapper
        href={twitter.url}
        data-testid="author__twitterUrl"
        title={intl.formatMessage({
          id: `authorPresentation.twitterLinkTitle`,
        })}
      >
        <TwitterIcon />
      </IconWrapper>
      <IconWrapper
        href={linkedIn.url}
        data-testid="author__linkedInUrl"
        title={intl.formatMessage({
          id: `authorPresentation.linkedInLinkTitle`,
        })}
      >
        <LinkedInIcon />
      </IconWrapper>
    </section>
  </aside>
  <figure class="relative w-20 h-20 rounded md:w-32 md:h-32">
    <Image
      class="object-cover rounded-full"
      src={siteData.personalInformation.profilePic.url}
      alt={intl.formatMessage({
        id: `authorPresentation.profileImageAlt`,
      })}
      loading="eager"
      priority
      width={128}
      height={128}
    />
  </figure>
</header>
