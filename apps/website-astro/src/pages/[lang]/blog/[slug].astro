---
import { domains, utils, SupportedLanguages } from '@raulmelo/core';
import Layout from '@/layouts/Layout.astro';
import { PortableTextPost } from '@/ui/PortableTextPost';
import { getIntl } from '@/infrastructure/i18n/getServerSideLocales.server';

import FeaturedImage from '@/ui/screens/blog/FeaturedImage.astro';

const { lang, slug } = Astro.params as {
  slug: string;
  lang: SupportedLanguages;
};

const post = await domains.posts.queryPostBySlug(slug);

if (utils.isNil(post) || utils.isEmpty(post)) {
  return {
    notFound: true,
  };
}

const estimatedReadingTime = utils.content.getEstimatedReadingTime(
  post.content,
);

const intl = getIntl(lang);

// TODO: add Missing SEO (get from the original set)
// const seoInfo = useMemo(() => {
//   const date = new Date(publishedAt).toISOString();

//   return {
//     title: title,
//     /**
//      * This enforce parsing double quotes correctly.
//      * - no parsing: "the description will be "like this""
//      * - parsing: "the description will be \"like this\""
//      */
//     description: `${description}`,
//     url: `${siteData.site.url}${asPath}`,
//     published: date,
//     modified: date,
//     image: {
//       url: featuredImage?.url ?? siteData.site.seoImage.url,
//       width: featuredImage?.width ?? siteData.site.seoImage.width,
//       height: featuredImage?.height ?? siteData.site.seoImage.height,
//     },
//   };
// }, [
//   title,
//   description,
//   featuredImage,
//   publishedAt,
//   asPath,
//   siteData.site.url,
// ]);
---

<Layout lang={lang} title={post.title}>
  {
    post.featuredImage ? (
      <FeaturedImage
        lang={lang}
        featuredImage={post.featuredImage}
        unsplash={post.unsplash}
      />
    ) : null
  }

  <PortableTextPost post={post} />
</Layout>
