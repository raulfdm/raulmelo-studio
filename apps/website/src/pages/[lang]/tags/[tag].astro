---
import { type SupportedLanguages } from '@raulmelo/core/config';
import {
  queryTagBySlug,
  sortPostsByPublishedDate,
} from '@raulmelo/core/domains';
import { isEmpty } from '@raulmelo/core/utils';

import { getIntl } from '@/infrastructure/i18n/getServerSideLocales.server';
import { sanityClient } from '@/infrastructure/sanity/client';
import {
  getHomePageUrl,
  getPostUrl,
  getTagsHomeUrl,
  getTilUrl,
} from '@/infrastructure/utils/url';
import { Breadcrumbs } from '@/ui/Breadcrumbs';
import Layout from '@/ui/layouts/Layout.astro';
import PostBasic from '@/ui/PostBasic.astro';

const { lang, tag } = Astro.params as { lang: SupportedLanguages; tag: string };

const remoteTag = await queryTagBySlug({
  slug: tag,
  language: lang,
  client: sanityClient,
});

const posts = sortPostsByPublishedDate(remoteTag.posts);

const intl = getIntl(lang);
---

<Layout
  title={intl.formatMessage(
    { id: `tags.single.seo.title` },
    {
      tag: remoteTag.name,
    },
  )}
  seo={{
    description: intl.formatMessage(
      { id: `tags.single.seo.description` },
      { tag: remoteTag.name },
    ),
  }}
>
  <Breadcrumbs
    class="mb-4"
    crumbs={[
      {
        label: intl.formatMessage({ id: `sideMenu.home` }),
        href: getHomePageUrl(lang),
      },

      {
        label: intl.formatMessage({ id: `sideMenu.tags` }),
        href: getTagsHomeUrl(lang),
      },
      {
        label: remoteTag.slug,
      },
    ]}
  />

  <header class="mb-4 col-span-full lg:mb-8">
    <h2 class="font-sans text-xl font-extrabold lg:text-3xl">
      {`"${remoteTag.name}"`}
    </h2>
    <p class="text-base md:text-lg lg:text-2lg">
      {intl.formatMessage({ id: `tags.single.description` })}
    </p>
  </header>
  {
    isEmpty(posts) ? (
      <p class="text-lg col-span-full">
        {intl.formatMessage({ id: `tags.single.empty` })}
      </p>
    ) : (
      <ul class="pb-5 space-y-6 md:pb-10 col-span-full">
        {posts.map((post) => {
          const getUrl = post._type === `post` ? getPostUrl : getTilUrl;

          return (
            <PostBasic
              titleClassName="text-xl lg:text-2xl"
              {...(post as any)}
              url={getUrl(post.slug, lang)}
            />
          );
        })}
      </ul>
    )
  }
</Layout>
