---
import { imgUrlFor } from '@raulmelo/core/utils';
import { Image as AstroImage } from 'astro:assets';

import { sanityClient } from '@/infrastructure/sanity/client';
import { mergeClasses } from '@/infrastructure/utils/misc';

type Props = {
  node: {
    caption: string;
    customWidth?: number;
    alt?: string;
    image: {
      url: string;
      width: number;
      height: number;
    };
  };
};

const {
  node: { image, caption, customWidth, alt },
} = Astro.props;

const { url, width, height } = imgUrlFor(sanityClient, image);

const finalWidth = customWidth || width;
const finalHeight = customWidth
  ? calculateCustomHeight(height, width, finalWidth)
  : height;

/**
 * Sharp + vercel edge functions are throwing an error when trying to resize
 * gifs.
 *
 * This is attempt to fix it.
 */
const isGif = image.url.endsWith(`.gif`);
const isLarge = finalWidth > 768;

function calculateCustomHeight(
  height: number,
  width: number,
  customWidth: number,
): number {
  const aspectRatio = height / width;
  const customHeight = aspectRatio * customWidth;
  return customHeight;
}
---

{
  isGif && isLarge ? (
    <img
      src={url}
      alt={alt ?? caption}
      loading="lazy"
      class="mx-auto rounded-md"
    />
  ) : (
    <figure>
      <AstroImage
        class={mergeClasses(`object-cover mx-auto rounded-md`, {
          'mb-0': Boolean(caption),
        })}
        src={url}
        alt={alt ?? caption}
        width={finalWidth}
        height={finalHeight}
      />
      {caption ? (
        <figcaption class="mt-2 text-center lg:mt-4">{caption}</figcaption>
      ) : null}
    </figure>
  )
}
