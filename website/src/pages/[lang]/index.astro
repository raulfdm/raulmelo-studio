---
import {
  type SupportedLanguages,
  supportedLanguagesSchema,
} from '@raulmelo/core/config';
import { queryPostsAndTils } from '@raulmelo/core/domains';

import { languageGetStaticPaths } from '@/infrastructure/getStaticPaths';
import { getIntl } from '@/infrastructure/i18n/getServerSideLocales.server';
import { sanityClient } from '@/infrastructure/sanity/client';
import {
  getPathnameWithLocale,
  getPostUrl,
  getTilUrl,
} from '@/infrastructure/utils/url';
import { AuthorPresentation } from '@/ui/AuthorPresentation';
import Layout from '@/ui/layouts/Layout.astro';

import PostSection from './_ui/PostSection.astro';

const { lang } = Astro.params as { lang: SupportedLanguages };

export const prerender = true;

export const getStaticPaths = languageGetStaticPaths;

const { success } = supportedLanguagesSchema.safeParse(lang);

/**
 * Didn't get yet why but "lang" could be `favicon.ico`. If that's the case
 * we just redirect to the root path.
 */
if (!success) {
  return Astro.redirect(Astro.request.url);
}

const NUMBER_OF_POSTS = 2;

const { posts, tils } = await queryPostsAndTils({
  locale: lang,
  numberOfPosts: NUMBER_OF_POSTS,
  client: sanityClient,
});

const intl = getIntl(lang);
---

<Layout>
  <AuthorPresentation />

  <PostSection
    title={intl.formatMessage({
      id: `home.posts.title`,
    })}
    posts={posts.map(
      (post) =>
        ({
          ...post,
          publishedAt: post.publishedAt,
          tags: post.tags,
          url: getPostUrl(post.slug, lang),
        }) as any,
    )}
    checkAllLink={{
      href: getPathnameWithLocale(`/blog`, lang),
      text: intl.formatMessage({
        id: `home.posts.checkAll`,
      }),
    }}
    lang={lang}
  />

  <hr
    class="mb-8 col-span-full md:col-start-2 md:col-end-6 lg:col-start-3 lg:col-end-10"
  />

  <PostSection
    lang={lang}
    title={intl.formatMessage({
      id: `home.tils.title`,
    })}
    posts={tils.map(
      (til) =>
        ({
          ...til,
          url: getTilUrl(til.slug, lang),
        }) as any,
    )}
    checkAllLink={{
      href: getPathnameWithLocale(`/til`, lang),
      text: intl.formatMessage({
        id: `home.tils.checkAll`,
      }),
    }}
  />
</Layout>
