---
import type { AcceptedLanguagesCode } from '@raulmelo/core/language';
import { getIntl } from '@/infrastructure/i18n/getServerSideLocales.server';
import { mergeClasses } from '@/infrastructure/utils/misc';
import { getTagUrl } from '@/infrastructure/utils/url';
import { ContentTypeTag } from '@/ui/ContentTypeTag';

import { Tag, Tags } from './Tags';

export interface Props {
  lang: AcceptedLanguagesCode;
  title: string;
  subtitle: string | null;
  url: string;
  _type?: `post` | `til` | `codeSnippet`;
  class?: string;
  publishedAt: string;
  titleClassName?: string;
  tags:
    | {
        name: string;
        slug: string;
      }[]
    | null;
}

const {
  publishedAt,
  tags,
  title,
  url,
  _type,
  subtitle,
  titleClassName,
  ...props
} = Astro.props;

const { lang } = Astro.params as { lang: AcceptedLanguagesCode };

const intl = getIntl(lang);
---

<section class:list={props.class}>
  <a
    href={url}
    class="relative inline-block cursor-pointer"
    data-astro-prefetch="viewport"
  >
    <h3 class:list={mergeClasses([`font-extrabold`, titleClassName])}>
      {title}
    </h3>
  </a>

  <div class="flex space-x-4 mb-2.5">
    <span class="block font-sans text-md">
      <time datetime={publishedAt}>
        {
          intl.formatDate(new Date(publishedAt), {
            year: `numeric`,
            month: `short`,
            day: `2-digit`,
          })
        }
      </time>
      {_type ? <ContentTypeTag type={_type} /> : null}
    </span>
  </div>
  {
    subtitle ? (
      <p class="text-lg lg:text-md text-primary dark:text-gray-200 text-opacity-80 dark:text-opacity-100">
        {subtitle}
      </p>
    ) : null
  }
  {
    tags ? (
      <Tags class="mt-4">
        {tags.map(({ name, slug }) => (
          <Tag>
            <a
              href={getTagUrl(slug, lang)}
              class="underline transition-all cursor-pointer hover:font-bold text-secondary"
            >
              #{name}
            </a>
          </Tag>
        ))}
      </Tags>
    ) : null
  }
</section>
